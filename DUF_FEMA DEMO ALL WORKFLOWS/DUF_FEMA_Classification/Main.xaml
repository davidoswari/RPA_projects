<Activity mc:Ignorable="sap sap2010" x:Class="DUF" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="2412,5255" sap2010:WorkflowViewState.IdRef="DUF_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:aa="clr-namespace:AttendedRobotStatus.Activities;assembly=AttendedRobotStatus" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>AttendedRobotStatus.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.AmazonWebServices.Core</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.AmazonWebServices.Activities</x:String>
      <x:String>UiPath.AmazonWebServices.Models</x:String>
      <x:String>UiPath.AmazonWebServices.Activities.S3.Buckets</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>System.Threading</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.AmazonWebServices.Activities.S3.Objects</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="44">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>AttendedRobotStatus</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.AmazonWebServices</AssemblyReference>
      <AssemblyReference>UiPath.AmazonWebServices.Activities</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Extensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Validation" sap:VirtualizedContainerService.HintSize="2209,5190" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="p1:DocumentTaxonomy" Name="tax" />
      <Variable x:TypeArguments="x:String" Default="rpa-filestore" Name="bucketName" />
      <Variable x:TypeArguments="s:String[]" Name="docTypeList" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="hasDeathCertificate" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="hasReceipt" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="x:String" Name="messageString" />
      <Variable x:TypeArguments="x:String" Default="FEMA_DOC_VALIDATION" Name="DocValidationQueueName" />
      <Variable x:TypeArguments="x:String" Default="Default" Name="DocValidationFolderPath" />
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
      <Variable x:TypeArguments="x:String" Default="123456789" Name="Reference" />
      <Variable x:TypeArguments="x:String" Name="DocType1" />
      <Variable x:TypeArguments="x:String" Name="DocFileName1" />
      <Variable x:TypeArguments="x:String" Name="FirstName" />
      <Variable x:TypeArguments="x:String" Name="LastName" />
      <Variable x:TypeArguments="x:String" Name="Email" />
      <Variable x:TypeArguments="x:String" Name="Phone" />
      <Variable x:TypeArguments="x:String" Name="StreetAddress" />
      <Variable x:TypeArguments="x:String" Name="CityAddress" />
      <Variable x:TypeArguments="x:String" Name="StateAddress" />
      <Variable x:TypeArguments="x:String" Name="DocFileName3" />
      <Variable x:TypeArguments="x:String" Name="DocType3" />
      <Variable x:TypeArguments="x:String" Name="DocFileName2" />
      <Variable x:TypeArguments="x:String" Name="DocType2" />
      <Variable x:TypeArguments="x:Boolean" Name="doExtraction" />
      <Variable x:TypeArguments="x:String" Default="C:\UiPath\input" Name="InputFolder" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="hasInsurance" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="dbconnection" />
      <Variable x:TypeArguments="x:String" Name="dcFile" />
      <Variable x:TypeArguments="x:String" Name="receiptFile" />
      <Variable x:TypeArguments="x:String" Name="insuranceFile" />
      <Variable x:TypeArguments="x:Boolean" Name="insuranceExists" />
      <Variable x:TypeArguments="ss:SecureString" Name="secretKeyFromOrchestrator" />
      <Variable x:TypeArguments="x:String" Name="accessKeyFromOrchestrator" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap:VirtualizedContainerService.HintSize="2167,655" sap2010:WorkflowViewState.IdRef="Sequence_20">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Get Transaction Item" FolderPath="[DocValidationFolderPath]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="GetQueueItem_2" QueueType="[DocValidationQueueName]" TransactionItem="[TransactionItem]" />
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,501" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[FirstName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("FirstName").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[Reference]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.Reference]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[DocType1]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("DocType1").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[DocFileName1]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("DocFileName1").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[LastName]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("LastName").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[Email]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("Email").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[Phone]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("Phone").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[StreetAddress]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("StreetAddress").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[CityAddress]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("CityAddress").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[StateAddress]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("StateAddress").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[DocType2]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("DocType2").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[DocFileName2]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("DocFileName2").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[DocType3]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("DocType3").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[DocFileName3]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("DocFileName3").ToString]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="DB Sequence" sap:VirtualizedContainerService.HintSize="2167,341" sap2010:WorkflowViewState.IdRef="Sequence_22">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="dcMessage" />
        <Variable x:TypeArguments="x:String" Name="receiptMessage" />
        <Variable x:TypeArguments="x:String" Name="insuranceMessage" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:DatabaseConnect DatabaseConnection="[dbconnection]" DisplayName="Connect" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.Odbc" ConnectionString="Dsn=PostgreSQL35W;pwd=rpademo4282021;uid=rpademo" />
      <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[dbconnection]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" Sql="[&quot;UPDATE basicform_report&quot; + &quot; SET &quot;&quot;internalStage&quot;&quot; = '1' where &quot;&quot;id&quot;&quot; = '&quot; + Reference + &quot;'&quot;]">
        <ui:ExecuteNonQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteNonQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteNonQuery>
      <ui:DatabaseDisconnect DatabaseConnection="[dbconnection]" DisplayName="Disconnect" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke parseFiles workflow" sap:VirtualizedContainerService.HintSize="2167,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="parseFiles.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="doc1Type">[DocType1]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="doc2Type">[DocType2]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="doc3Type">[DocType3]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="docFileName2">[DocFileName2]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="docFileName3">[DocFileName3]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="docFileName1">[DocFileName1]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="dcFile">[dcFile]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="receiptFile">[receiptFile]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="insuranceFile">[insuranceFile]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:SetTransactionProgress TimeoutMS="{x:Null}" DisplayName="Set Transaction Progress" sap:VirtualizedContainerService.HintSize="2167,132" sap2010:WorkflowViewState.IdRef="SetTransactionProgress_2" Progress="In Progress" TransactionItem="[TransactionItem]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:SetTransactionProgress>
    <aa:AttendedRobotStatus DisplayName="Attended Robot Status" ErrorLvl="False" sap:VirtualizedContainerService.HintSize="2167,79" sap2010:WorkflowViewState.IdRef="AttendedRobotStatus_2" InfoLvl="False" Message="Getting documents from S3" WarnLvl="True" />
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="aws_credentials" DisplayName="Get Credential" FolderPath="default" sap:VirtualizedContainerService.HintSize="2167,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[secretKeyFromOrchestrator]" Username="[accessKeyFromOrchestrator]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AmazonS3 workflow" sap:VirtualizedContainerService.HintSize="2167,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="AmazonS3.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="accessKey">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="accessKeyFromOrchestrator" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="bucketName">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="bucketName" />
        </InArgument>
        <InArgument x:TypeArguments="ss:SecureString" x:Key="securesecretKey">
          <mva:VisualBasicValue x:TypeArguments="ss:SecureString" ExpressionText="secretKeyFromOrchestrator" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="InputFolder">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="InputFolder" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Reference">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Reference" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap:VirtualizedContainerService.HintSize="2167,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[DocTypeList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[{DocType1, DocType2, DocType3}]</InArgument>
      </Assign.Value>
    </Assign>
    <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="2167,103" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_2" Taxonomy="[tax]" />
    <Assign sap:VirtualizedContainerService.HintSize="2167,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="2167,60" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[messageString]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
    </Assign>
    <Parallel DisplayName="Parallel - Document Validation" sap:VirtualizedContainerService.HintSize="2167,665" sap2010:WorkflowViewState.IdRef="Parallel_2">
      <Sequence DisplayName="Process Doc 1" sap:VirtualizedContainerService.HintSize="651,619" sap2010:WorkflowViewState.IdRef="Sequence_17">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Default="False" Name="matches" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <aa:AttendedRobotStatus DisplayName="Attended Robot Status" ErrorLvl="False" sap:VirtualizedContainerService.HintSize="609,79" sap2010:WorkflowViewState.IdRef="AttendedRobotStatus_4" InfoLvl="False" Message="Processing death certificate" WarnLvl="True" />
        <If Condition="[dcFile.Trim().Length&gt;4]" sap:VirtualizedContainerService.HintSize="609,270" sap2010:WorkflowViewState.IdRef="If_10">
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="Invoke Processing workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processing.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="p1:DocumentTaxonomy" x:Key="taxonomy">[tax]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="document">[InputFolder +"/" + Reference + "/" + dcFile]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_docType">DeathCertificate</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_matches">[matches]</OutArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="in_possibleDocTypes">[docTypeList]</InArgument>
                <InOutArgument x:TypeArguments="x:String" x:Key="io_messageString">[messageString]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="death certificate is missing" />
          </If.Else>
        </If>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="609,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:Boolean">[hasDeathCertificate]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:Boolean">[matches]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
      <Sequence DisplayName="Process Doc 2" sap:VirtualizedContainerService.HintSize="651,619" sap2010:WorkflowViewState.IdRef="Sequence_18">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Default="False" Name="matches" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <aa:AttendedRobotStatus DisplayName="Attended Robot Status" ErrorLvl="False" sap:VirtualizedContainerService.HintSize="609,79" sap2010:WorkflowViewState.IdRef="AttendedRobotStatus_5" InfoLvl="False" Message="Processing receipt" WarnLvl="True" />
        <If Condition="[receiptFile.Trim().Length &gt; 4]" sap:VirtualizedContainerService.HintSize="609,270" sap2010:WorkflowViewState.IdRef="If_8">
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="Invoke Processing workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processing.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="p1:DocumentTaxonomy" x:Key="taxonomy">[tax]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="document">[InputFolder +"/" + Reference + "/" + receiptFile]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_docType">Receipt</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_matches">[matches]</OutArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="in_possibleDocTypes">[docTypeList]</InArgument>
                <InOutArgument x:TypeArguments="x:String" x:Key="io_messageString">[messageString]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="receipt is missing" />
          </If.Else>
        </If>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="609,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:Boolean">[hasReceipt]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:Boolean">[matches]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
      <Sequence DisplayName="Process Doc 3" sap:VirtualizedContainerService.HintSize="651,619" sap2010:WorkflowViewState.IdRef="Sequence_19">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Default="False" Name="matches" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <aa:AttendedRobotStatus DisplayName="Attended Robot Status" ErrorLvl="False" sap:VirtualizedContainerService.HintSize="609,79" sap2010:WorkflowViewState.IdRef="AttendedRobotStatus_6" InfoLvl="False" Message="Processing insurance" WarnLvl="True" />
        <If Condition="[insuranceFile.trim().Length &gt; 4]" sap:VirtualizedContainerService.HintSize="609,270" sap2010:WorkflowViewState.IdRef="If_9">
          <If.Then>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="Invoke Processing workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Processing.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="p1:DocumentTaxonomy" x:Key="taxonomy">[tax]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="document">[InputFolder +"/" + Reference + "/" + insuranceFile]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_docType">Insurance</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_matches">[matches]</OutArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="in_possibleDocTypes">[docTypeList]</InArgument>
                <InOutArgument x:TypeArguments="x:String" x:Key="io_messageString">[messageString]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </If.Then>
          <If.Else>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="Insurance is missing" />
          </If.Else>
        </If>
        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="609,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_39">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:Boolean">[hasInsurance]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:Boolean">[matches]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
    </Parallel>
    <If Condition="[hasReceipt and hasDeathCertificate]" sap:VirtualizedContainerService.HintSize="2167,1558" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="358,390" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <aa:AttendedRobotStatus DisplayName="Attended Robot Status" ErrorLvl="False" sap:VirtualizedContainerService.HintSize="316,79" sap2010:WorkflowViewState.IdRef="AttendedRobotStatus_7" InfoLvl="False" Message="submission is complete, will go to Extraction" WarnLvl="False" />
          <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Transaction Status" ErrorType="Business" sap:VirtualizedContainerService.HintSize="316,79" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_2" Status="Successful" TransactionItem="[TransactionItem]">
            <ui:SetTransactionStatus.Analytics>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:SetTransactionStatus.Analytics>
            <ui:SetTransactionStatus.Output>
              <InArgument x:TypeArguments="x:String" x:Key="ValidationMessage">Validate Successfuly</InArgument>
            </ui:SetTransactionStatus.Output>
          </ui:SetTransactionStatus>
          <Assign sap:VirtualizedContainerService.HintSize="316,60" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[doExtraction]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="526,1400" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[hasDeathCertificate.Equals (False)]" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[messageString]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[messageString + vbNewLine +"Death Certificate is missing."]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
          <If Condition="[hasReceipt.Equals(False)]" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[messageString]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[messageString + vbNewLine + "Receipt is missing."]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
          </If>
          <aa:AttendedRobotStatus DisplayName="Attended Robot Status" ErrorLvl="False" sap:VirtualizedContainerService.HintSize="484,79" sap2010:WorkflowViewState.IdRef="AttendedRobotStatus_8" InfoLvl="False" Message="Validation Failed, Sending Email" WarnLvl="False" />
          <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hello &quot; + FirstName + &quot; &quot; + LastName + &quot;,&quot; + vbNewLine + &quot;Under the Coronavirus Response, FEMA is providing financial assistance for COVID-19 related funeral expenses incurred after January 20, 2020. Your application for financial assistance is missing few documents which are required for the approval. The missing documents are as follows: &quot; + messageString + vbNewLine +&quot;Kindly submit them at the earliest to get your application approved.&quot; + vbNewLine + vbNewLine +&quot;Thank You&quot;]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="484,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="Covid-19 Funeral Document Validation Error" To="[Email]">
            <ui:SendOutlookMail.Files>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
            </ui:SendOutlookMail.Files>
          </ui:SendOutlookMail>
          <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Set Transaction Status" ErrorType="Business" sap:VirtualizedContainerService.HintSize="484,79" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_3" Status="Successful" TransactionItem="[TransactionItem]">
            <ui:SetTransactionStatus.Analytics>
              <scg:Dictionary x:TypeArguments="x:String, InArgument" />
            </ui:SetTransactionStatus.Analytics>
            <ui:SetTransactionStatus.Output>
              <InArgument x:TypeArguments="x:String" x:Key="ValidationMessage">[messageString]</InArgument>
            </ui:SetTransactionStatus.Output>
          </ui:SetTransactionStatus>
          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_12">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[doExtraction]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
          <aa:AttendedRobotStatus DisplayName="Attended Robot Status" ErrorLvl="False" sap:VirtualizedContainerService.HintSize="484,79" sap2010:WorkflowViewState.IdRef="AttendedRobotStatus_10" InfoLvl="False" Message="Amazon Connect - Calling the applicant" WarnLvl="True" />
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AmazonConnect workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="AmazonConnect.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="OutMessage">[messageString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="OutPhoneNo">[Phone]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </If.Else>
    </If>
    <aa:AttendedRobotStatus DisplayName="Attended Robot Status" ErrorLvl="False" sap:VirtualizedContainerService.HintSize="2167,79" sap2010:WorkflowViewState.IdRef="AttendedRobotStatus_9" InfoLvl="False" Message="Updating Database values" WarnLvl="False" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke DBSequence workflow" sap:VirtualizedContainerService.HintSize="2167,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="DBSequence.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="ui:DatabaseConnection" x:Key="dbconnection">[dbconnection]</InOutArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="hasInsurance">[hasInsurance]</InArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="hasDeathCertificate">[hasDeathCertificate]</InArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="hasReceipt">[hasReceipt]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Reference">[Reference]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[doExtraction.Equals(True)]" sap:VirtualizedContainerService.HintSize="2167,291" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="Default" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="FEMA_DOC_EXTRACTION" Reference="[Reference]">
            <ui:AddQueueItem.ItemInformation>
              <InArgument x:TypeArguments="x:String" x:Key="InputFolder">[InputFolder]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="docFileName1">[DocFileName1]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="docFileName2">[DocFileName2]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="docFileName3">[DocFileName3]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="docType1">[DocType1]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="docType2">[DocType2]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="docType3">[DocType3]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="dcFile">[dcFile]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="receiptFile">[receiptFile]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="insuranceFile">[insuranceFile]</InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="hasInsurance">[hasInsurance]</InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="hasDeathCertificate">[hasDeathCertificate]</InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="hasReceipt">[hasReceipt]</InArgument>
            </ui:AddQueueItem.ItemInformation>
          </ui:AddQueueItem>
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>